(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{96:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return h}));var n=a(3),i=a(0),r=a.n(i),l=a(137),s=a(142),o=a(139),c=a(16),m=a(141),d=a(97),u=a.n(d);const g=[{title:"Easy to use",imageUrl:"img/easy.png",description:r.a.createElement(r.a.Fragment,null,"The framework integrates microservice components natively, automatically recognizes each other, and greatly reduces the coupling configuration and dependency between microservice components.")},{title:"Automatic node discovery",imageUrl:"img/auto.png",description:r.a.createElement(r.a.Fragment,null,"The registration center and configuration center are automatically discovered. There is no central node, a full cluster distributed registration center, which does not rely on a third-party registration center.")},{title:"Application Modularization",imageUrl:"img/modular.png",description:r.a.createElement(r.a.Fragment,null,"It supports modular design. Each application can be divided into multiple modules. Each module has independent install, uninstall, load and unload logic, and has its own version and configuration file.")},{title:"Distributed transaction",imageUrl:"img/transaction.png",description:r.a.createElement(r.a.Fragment,null,"It natively supports distributed transactions and does not rely on external transaction coordination managers or other special services. Currently three transaction models are supported: TCC, LCN (Native Rollback) and TXC (Compensated Rollback).")},{title:"Distributed cache",imageUrl:"img/cache.png",description:r.a.createElement(r.a.Fragment,null,"It natively supports distributed key/value cache. Generally, there is no need to rely on external redis or other key/value databases.")},{title:"Distributed database",imageUrl:"img/database.png",description:r.a.createElement(r.a.Fragment,null,"It natively supports distributed database, databases and tables can be sharded horizontally, without external dependence on MySQL and other database components.")},{title:"Message service",imageUrl:"img/message.png",description:r.a.createElement(r.a.Fragment,null,"It natively supports simple distributed messaging services, but high-performance messaging services still require external professional (Kafka/rocketMQ) messaging components.")},{title:"Parallel computing",imageUrl:"img/parallel.png",description:r.a.createElement(r.a.Fragment,null,"It natively supports parallel computing, which can distribute computing tasks to each node for parallel computing, and supports MapReduce-like operations.")},{title:"Multi-application",imageUrl:"img/multiple.png",description:r.a.createElement(r.a.Fragment,null,"It supports the same JVM to start multiple applications working on different ports.")},{title:"Logging system",imageUrl:"img/log.png",description:r.a.createElement(r.a.Fragment,null,"It natively supports logging system. There is no need to worry about conflicts between slf4j, logback and other logging systems.")},{title:"Distributed current limiting",imageUrl:"img/limiter.png",description:r.a.createElement(r.a.Fragment,null,"It supports distributed current limiting, IP black and white lists, IP concurrency limiting, and rate limiting. Set on any node, the same setting will be automatically applied to other nodes.")},{title:"Time and ID service",imageUrl:"img/time.png",description:r.a.createElement(r.a.Fragment,null,"It calculates the time by itself and does not rely on the host time to ensure uniform and reliable time among cluster nodes. The improved Snowflake ID built under this time guarantee, there is no need to worry about the clock moving backwards.")},{title:"Event-driven",imageUrl:"img/event.png",description:r.a.createElement(r.a.Fragment,null,"It supports event-driven. The event listener can receive internal events of the current node application, as well as cluster node events. Any node can receive specific global events sent by other nodes in the cluster.")},{title:"Domain name support",imageUrl:"img/subdomain.png",description:r.a.createElement(r.a.Fragment,null,"It natively supports domain name resolution, you only need to resolve the pan-domain name to the server, and the controller can directly bind the sub-domain name by annotation.")},{title:"Stay tuned",imageUrl:"img/developing.png",description:r.a.createElement(r.a.Fragment,null,"Native distributed OAUTH2, native APM system, native data authority and audit system, native distributed artificial intelligence support.")}];function p({imageUrl:e,title:t,description:a}){const n=Object(m.a)(e);return r.a.createElement("div",{className:Object(l.a)("col col--4",u.a.feature)},n&&r.a.createElement("div",{className:"text--center"},r.a.createElement("img",{className:u.a.featureImage,src:n,alt:t})),r.a.createElement("h3",null,t),r.a.createElement("p",null,a))}function h(){const e=Object(c.default)(),{siteConfig:t={}}=e;return r.a.createElement(s.a,{title:`${t.title} web framework`,description:"AN ULTRA-EASY, MODULAR MICROSERVICE, DISTRIBUTED TRANSACTION, PARALLEL COMPUTING, ALL-IN-ONE WEB FRAMEWORK"},r.a.createElement("header",{className:Object(l.a)("hero hero--primary",u.a.heroBanner)},r.a.createElement("div",{className:"container"},r.a.createElement("h1",{className:"hero__title"},t.title),r.a.createElement("p",{className:"hero__subtitle"},t.tagline),r.a.createElement("div",{className:u.a.buttons},r.a.createElement(o.a,{className:Object(l.a)("button button--outline button--secondary button--lg",u.a.getStarted),to:Object(m.a)("docs/")},"Get Started")))),r.a.createElement("main",null,g&&g.length>0&&r.a.createElement("section",{className:u.a.features},r.a.createElement("div",{className:"container"},r.a.createElement("div",{className:"row"},g.map(((e,t)=>r.a.createElement(p,Object(n.a)({key:t},e)))))))))}}}]);